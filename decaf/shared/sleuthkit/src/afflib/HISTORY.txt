Release 1.6.20:
Library should now compile on NetBSD and OpenBSD. Let me know if it doesn't

Release 1.6.19:
Library (but nothing else) now compiles on solaris with GCC

Release 1.6.18:
Now compiles with either Berkeley make or gmake

Release 1.6.17:
af_read:
- returns 0 if attempt made to read a file with no bytes.
- returns -1 if attempt made to read a file with no pagesize defined.

aimage:
- Erases screen junk of amount of freespace on disk goes from 1000MB to 999MB

Release 1.6.16:
aimage:
- Fixed a bug in report printing without going back into \r\l mode.
- fixed error handling when disk fills up. 

Release 1.6.15:
- Removed aff file in tools directory. Sorry about that.

Release 1.6.14:
afxml:
 - metadata segments that just had an arg and no data are now reported as
   <segname>###</segname>, rather than <segname arg=### />
aimage:
 - minor cosmetic improvements


Release 1.6.13:
lib:
 - error message on split_raw_setup clarified
 - af_open now returns 0 if it can't open the file

aimage:
 - now has flags to suppress inclusion of dmesg and ethernet address in AFF file.
 - scaled_atoi now checks its parameters better.
 - cleaned up display on 25x80 display
 - cleaned up display when imaging multiple drives
 - --setseg now works
 - now handles improperly-mastered CDROMs


Release 1.6.12:
lib:
  - fixed badflag handling (badflags were only 4 bytes due to 
    variable sector size changes.)

Release 1.6.11:
vnode_afm:
  af_callback now gets propigated from afm layer to split_raw layer
  on af_write.
lib:
  AFFLIB now has a "parent" pointer which is set for AFM and AFD.
  callback now uses the parent instead of self if parent is set
aimage:
  -v now prints the version number and exits.
  -V now scans in reverse.


Release 1.6.9:
aimage:
- Whoops. Broke update logic in 1.6.8. Fixed

Release 1.6.8:
aimage:
- remove foo.000 and foo.afm from release

Release 1.6.7:
lib:
- Fixed release system so that release X can't be made if release X is already on the server
- Fixed bug in vnode_raw implementation resulting from move to 64-bit math

aimage:
- modified aimage so that it only updates the screen (and queries the timer)
  every million bytes read
- by default, no log file is written

afinfo:
- prints hex digits as DDDD EEEE FFFF now
- fixed behavior of sha1 printing --- it breaks by two lines by default


Release 1.6.6:
lib:
- moved check on change of imagesize on close from aff_close to af_close.
  Now check is done for AFM files in addition to AFF files. This fixes the
  bug of the AF_IMAGESIZE segment not being written by aimage with AFM files.
- renamed af->image_size_orig to af->image_size_in_file to make it more clear what it does
- created new segment type "aff_file_type" which holds AFF for AFF files, AFM for AFM files,
  and AFD for AFD files. 
- created aff_create() and afm_create() functions which are automatically
  called by the corresponding _open() functions when a file is created.
- removed af_set_maxsize64; af_set_maxsize now requires a 64-bit argument
- created new function, af_set_sectorsize()
- sectorsize no longer hard-coded to be 512.
- removed af_demand_sizes; sizes are now assumed read when the file is opened
- no longer calls err() in af_open
- Virus hiding claim removed from FAQ

TOOLS:
- all tools take "-v" to print their version number. Tools that were using
  -v for "verbose' have been changed

afcat:
- checks for -1 return from af_read

afconvert:
- all math involving pages changed to 64-bits
- now honors opt_quiet

afinfo:
- -d command now returns pagesize in addition to page number
- -w command now implemented properly

aimage:
- error message with -E omitted no longer misleading
- Checks for ifconfig in path before running ifconfig

afcompare:
- -v no longer is verbose
- -a prints things that are the same
- -b prints sector numbers that were different
- -c prints contents of sectors that are different.


Release 1.6.5:
afconvert:
- 'm' and 'k' changed back to mod 1024, not mod 1000
- imagesize segment now written when converting from raw to afm

aimage:
- SIGINFO #ifdefed so that it only is included if SIGINFO is defined.


Release 1.6.4:
- afconvert and afinfo fixed to handle 0 read bytes from af_read()

Release 1.6.3:
- af_set_sizes() call removed.
- fixed bug in af_cat
- several bugs in AFM implementation fixed.


Release 1.6.2
- fixed bug in af_imagesize which was affecting afcat
- fixed bug in parsing of -M option in afconvert
- fixed af_eof() for AFF implementation.

Release 1.6.1:
vnode_afd:
- Support for AFD was inadvertantly broken in 1.6.0; it's fixed in 1.6.1

Release 1.6.0:
vnode_split_raw.cpp:
- integrated code from Joel Weber with these significant changes:
- Removed dependency on AFF/AFD/AFM implementation
- changed implementation to use lseek() to write empty files, rather than repeated writes of buffers...
- modified split_raw_get_seg so that it called af_segname_page_number() rather than parsing by hand.
- created afm_update_seg() so that we could remove call to afm_identify_file in split_raw_update_seg
- fixed a bug whereby 256K of raw files were created if maxsize was smaller than ZERO_BUFFER_SIZE,
  which was hard-coded to 256K
- removed raw_file_size from split_raw_private, as it was redundent with maxfilesize in the AFFILE structure.

vnode_afm.cpp:
- integrated code form Joel Weber with these significant changes:
- Opens two sub-files, one for the AFM metadata (through a coerced aff_open()), and one 
  for the split_raw implementation.
- Note: there is still a bug that AFM files can't be opened for extending; 

lib:
- added af_has_pages() to allow higher-level programs to know if the underlying
  vnode implementation supports pages or not.
- af_vnode_info: added has_pages flag so that an implementation can tell the higher
  layers if it supports pages or not.
- vnode_raw: made it so that af_popen() now tells the higher layers that pages are not
  supported.
- af_vnode_info: added use_eof and at_eof flags, to support EOF reporting on af_popen.
- awaiting af_read() & af_write() bypass, pending code from nemo

afcat:
- Outputs NULs for bad blocks unless -b is given. 

afconvert:
- Added version to usage.
- Fixed conversion of gzip'ed and bzip'ed raw images
- Calls af_has_pages to see if the input vnode implementation supports pages or not.
  If it doesn't, then it just reads from the beginning of the image to the end.
- Implemented -O (outdir) flag

afinfo:
- Now honors -w flag
- Output squished to fit MD5s and SHA1s.

aimage:
- Properly prints free space on FreeBSD, MacOS and Linux
- Prints MD5 & SHA1 as groups of 4 upper-case letters.
- Now stores sectorsize in "sectorsize" segment
- Now stores number of sectors that the device has in "devicesectors" segment
- --pagesize= option now allows suffix of b, k, m or g
- ACQUISTION_TIME now correct (it was being saved as a 64-bit number but reported as a 
  32-bit number in afinfo.)



Release 1.5.13:
Encase support works for multiple encase files.
       .E01, .E02 ... .E99

Release 1.5.12:
aimage:
- now allows --maxsize=cd and --maxsize=bigcd
- --no_hash (-H) avoids hash calculation

Release 1.5.10:
makefiles:
- Finally implemented a single makefile along the lines
  of the "Recursive Make considered Harmful" paper, but improved,
  with targets that work in both the subdirectories and in the root directory.
  Currently it only works with gmake, which is only a problem under FreeBSD.

Release engineering:
- added a "tests" directory and moved end-to-end testing there.
  afconvert, afcat, and aimage are now automatically tested as part of the release
  process.

aimage:
- no longer dumps core when not given an output file.
- Doesn't waste left-most column of screen
- Displays elapsed time when running.
- Now displays elapsed time while imaging
- Now displays aimage version
- Saves total time to image a disk in the AFF file.
- Properly indicates free space left on capture disk.

Release 1.5.9:
- Fixed bug in release system which was giving incorrect filenames
- fixed bug in AFD which wasn't setting image size properly in the sub AFF files
- fixed bug in AFD support where maxsize wasn't being set on default. 
  Now it defaults to 600M

Release 1.5.8:
- Fixed progname bug (progname appears to only exist under
  freeBSD)

Release 1.5.7:
- fixed a few bugs regarding AFD performance

afcompare:
- -v flag (verbose) implemented. When run without -v, doesn't report similarities.
- corrected a bug when a data segment was in one file but not another.


Release 1.5.6:
- More options added to afcat for handling segments.
aimage:
- aimage now puts now information into aff files.



Release 1.5.5:
lib:
- Eliminated bug when an afd file was opened read-only of the library
  giving error messages that it was unable to copy over metadata from
  the first AFF file to the other AFF files.
- AFFLIB is now tolerant of a trailing / on .afd names.
- Stores AFFLIB version in the AFF file when new files are created.

afcat:
- now prints AFFLIB version number.
- now prints a warning on STDOUT if a page is skipped; suppress with -q
- no longer clobbers output file without warning
- no longer give errors about not being able to "update"
  information when it cats out an AFD file.


afcompare:
- now prints AFFLIB version number

afinfo:
- Now prints AFFLIB version number.
- Option -v no longer validates hash codes
- Option -m validates MD5 codes
- Option -s validates SHA1 codes
- No longer prints the total compression efficiency

afstats:
- Now prints AFFLIB version number

afxml:
- Now prints AFFLIB version number
- Puts AFFLIB version number as a comment in XML output

release:
- fixed bug of executables in release tar file

aimage:
- ETA acronym removed; now says "Done in:"




Release 1.5.4:
afconvert:
- significant changes in option parsing to make it more reliable.
- Now properly handles creating files with non-standard AFF segment sizes
- change to "-z" option so that it zaps the output file, not the input file
  (to make consistent with other af commands.)

release engineering:
- auotmatic validation of afconvert and afcat as part of the release cycle

Release 1.5.3:
aimage
- Minor patch so it should write afd files...


Release 1.5.1:
- fixed suffixing for -M command in aimage
aimage:
- Now reads serial numbers of USB memory sticks using sysctl -a.
- NOTE: Be sure that ther eis only one USB memory stick in the system when you do this,
  because we can't figure out how to match the stick up with the S/N other than the
  manufacturer's name.

Release  1.5
lib:
- Initial support of EVF file format. (Only works on Intel right now, not PPC) 

afconvert:
- rewrote to use vnode support

aimage:
- Initial support for split files

Release 1.4.1:
aimage:
- fixed bug when encountering errors and imaging from a device. 
  (The error is that additional bad blocks were being written into the file with
   out proper BAD SECTOR headers. No real data was corrupted, but in some cases
   random data appeared in the image file which should not have been written.)
- Improved error recovery. Previously, 5 attempts were made to read the sectors that failed, after
  which the program gave up. Now it skips forward and tries to read the next set of sectors. It repeats
  this whole process until there is a bad region that is equal 2.5 times the size of the 
  default read (256K). 

lib:
- fixed bug in which small pages were written out with too much data
- fixed bug in af_get_page in which invalid data was being left uninitialized rather than 
  being initialized with the bad_block flag


-Release 1.4
Terminology change: data segments are renamed "pages" to eliminate confusion with AFF segments. 

lib:
- Implemented a "vnode" abstraction to make it easy to work with multiple file systems.
- Found and fixed at least 10 major bugs. None of them would have caused data corruption,
  but some would have caused the library to go into an infinite loop or to crash.
- Support for "AFD" files --- these are directories of AFF files. This will allow AFF
  to work with file systems that do not support files larger than 2^32 characters 
  (such as FAT32). 


Known bugs:
AImage: bad block flags are not being properly written out in AFF files. 

afinfo:
- prints more information about AFF files in an easy-to-read format

afcompare:
- Now compares two AFF files, or an AFF and a RAW file.

-Release 1.3.4
aimage:'
- Dramatic restructing of the program. 
- You can now batch multiple aimage commands on a single command line.
  The program surveys total amount of data to copy and a grand-total ETA.
- New -A option will write out a segment with compression, a segment without
  compression, and then will go with the fastest approach.
- Better graphics
- Prints a certificate when the imaging is finished

lib:
- Removed call to fpurge(), which was incorrect.
- renamed aff_ to aff_toc, becuase it really is building a
  table of contents.

-Release 1.3.3
lib:
- Improved error handling in writing segments. 
- More information is now provided to segment writing callback function. 

aimage:
- Removed the --info command, since it was just for debugging.
- Made --make-config a flag that creates the config file if it doesn't exist,
  but it uses the name provided by --config.
- Revamped config file. 
- removed some global variables that weren't being used; folded others into the 
  imager class.
- fixed bug in aimage when reading from devices whose length cannot be determined 
  (e.g. /dev/zero, (tapes, TCP connections)

aconvert:
- No longer core-dumps if the file that it is asked to convert doesn't exist.

January 9, 2006 - Release 1.3.3
aimage:
- added a -A flag which makes aimage compress or not compress, whichever is faster.


January 9, 2006 - Release 1.3.2
Overall:

aimage:
- Some curses testing code was left in. It's been removed.

January 8, 2006 - Release 1.3.1.
Overall:
- Moved source for aimage to aimage/ directory
- Move source for tools to tools/ directory

aimage:
- On Linux, now reads the serial number of USB drives that are being imaged
  using the /proc file system. 

tools:



December 31, 2005 - Release 1.3.0
overall:
- Moved library source code into lib/ subdirectory. 
  One big makefile still makes it all, see
  "Recursive make considered harmful."
  http://www.canb.auug.org.au/~millerp/rmch/recu-make-cons-harm.html

afcat:
- Now only outputs the segments containing data.
  It does this by first scanning and making a list of all the data segments;
  It then seeks to the location of each one in the virtual file, reads 
  the segment worth of data, and sends it to stdout.

afconvert:
- When outputing with the -o option, now outputs an AFF file if file ends
  '.aff' and outputs raw if file does not end .aff
- The -x (no compression) flag now works. 
- The -X (set compression level) flag has been implemented. 
- As a result, you can now batch compress a set of uncompressed AFF files

Release 1.2.9
afconvert:
- fixed crashing bug when converting raw files to aff files
- fixed crashing bug when converting aff files to raw files.


December 21, 2005 - Release 1.2.8

library:
- AF_BADBLOCKS is now initialized to 8 bytes of NULs, rather than 
  a 0-length segment.
- fixed corruption bug in af_del_seg().
- Added (tm).

aimage:
- Fixed calculation of free space on the disk for FreeBSD.
- Made display more attractive. 
- Added support for automatically rescanning scsi bus. 
  You can now scan the scsi bus and image by specifying "scsi1", for 
  example, to image from scsi bus 1.  (FreeBSD only.)
- Added optional preview to let you see the data as it is recorded.
  This is great for spotting drives that have been 'sanitized' or
  cleared.
- Displays size of target disk in GB/MB/KB 
- Doesn't compute hash for raw image if the image is invalid 
  (if aimage did an lseek.)
- Now captures ATA serial number even if disk can't be imaged. 
- Prints final report of image results  

afconvert:
- fixed crashing bug in afconvert.
- Corrected incorrect "progname" in many utilities.

afinfo:
- More tolerant of errors in aff file.

affix:
- Initial Release
- Can fix a file that is not properly terminated by removing junk at end.
  This is useful if a computer crashes while aimage is being run.

December 6, 2005 - Release 1.2.7
- Minor fixes for makedepend problems that people on various platforms had

November 18, 2005 - Release 1.2.5
- Implemented segment directory; list of all segments is now kept
  in memory, rather than read on-the-fly from the disk. This 
  dramatically improves performance on random-access test. 
  Library falls back to old method of scanning the file for
  each segment if the segment list is too large to hold in memory.
  Time for aftest -3 improves on my laptop from TK seconds to 27 seconds.
  

November 18, 2005 - Release 1.2.4
- redesigned afflib for improved performance.
- afconvert can now convert from one AFF to another AFF.

October 21, 2005 - Release 1.2.1
- Added a whole bunch of segment names.
- Found a nasty bug in updating of segments under certain circumstances
- Lots of new features in aimage

October 20, 2005 - Release 1.2.0
- created atest for heavy-duty testing of af_seek()
- support for reading drive SN under Linux and FreeBSD
- found bug in af_seek()

October 11, 2005 - Release 1.1.1
- Modified af_open() so it read data_segsize on open.  
- changed af_setsize() to af_set_sizes(). Now it doesn't allow you to change the
  data segment size if it has already been set.
- Modified convert to handle gzipped files with gzcat.
- Fixed but in aconvert where infiles were not being closed.
- removed fancy image size calculation from ainfo, as it wasn't right for compressed files.
- Added -Wall and found lots of signage bugs
- Cleanly compiles on Linux; supports > 2GB files


September 11, 2005 - Release 1.1
- Added support for writing files with af_write().
- New files now automatically get bad block flag created
- fixed afflib for AMD64 architectures.
- ainfo wasn't calculating SHA-1 properly for -v option on AMD64. Fixed.
  ainfo wasn't printing compression overhead properly. Fixed. Also fixed
  small buffer overflow in printing of SHA-1 values.
- changed "radio" typo to "ratio."
- aconvert now aborts (and deletes AFF file) if ^C is pressed or if
  a write fails.
- aconvert now refuses to convert an AFF file. Added af_identify(fname) to 
  return true if a file is probably an AFF file and false if it is not.

August 14, 2005 - Release 1.0.1
- changed minor bug in aconvert in handling of multiple files

August 13, 2005	- Release 1.0

Initial Release of AFFLIB. Includes library description, README, basic
library functionality, and four utilities.


